<!DOCTYPE html>
<html lang="en">
<!-- header -->
<%- include('./partials/docs-head') %>

<body>
  <!-- header -->
  <%- include('./partials/header') %>

  <!-- side-nav -->
  <%- include('./partials/docs-side-nav') %>

  <section>
    <div class="content">
      <h1 class="docs-title">
        <img src="https://assets.dummyjson.com/public/img/icons/home.svg" class="icon" alt="svg icon" /> DummyJSON - Docs
      </h1>
      <p class="display-para">
        DummyJSON can be used with any type of front end project that needs products, carts, users, todos or any dummy
        data in JSON format.
        <br />
        You can use examples below to check how DummyJSON works.
        <br />
        <br />
        Feel free to enjoy it in your awesome projects!
      </p>

      <div class="resource" id="intro-test">
        <a href="#intro-test" class="res-title">Test Route</a>
        <p class="res-desc">See if your internet is working &#128521;</p>
        <pre><code class="language-js">
          // Could be GET or POST/PUT/PATCH/DELETE
          fetch('//dummyjson.com/test')
          .then(res => res.json())
          .then(console.log);

          /* { status: 'ok', method: 'GET' } */
        </code></pre>
      </div>

      <div class="resource" id="intro-limit">
        <a href="#intro-limit" class="res-title">Limiting Resources</a>
        <p class="res-tip">
          All the resources can be used with query params to achieve pagination and get limited data. `limit=0` clears
          the limit and you get all items
        </p>
        <pre><code class="language-js">
          fetch('https://dummyjson.com/RESOURCE/?limit=10&skip=5&select=key1,key2,key3');
        </code></pre>
        <p class="res-desc">
          It can be comma separated, OR, you can use multiple select query params to get multiple keys.
        </p>
        <pre><code class="language-js">
          fetch('https://dummyjson.com/RESOURCE/?limit=10&skip=5&select=key1&select=key2&select=key3');
        </code></pre>
      </div>

      <div class="resource" id="intro-delay">
        <a href="#intro-delay" class="res-title">Delay Responses</a>
        <p class="res-tip">
          You can simulate a delay in responses using the delay param, delay can be any number between 0 and 5000
          milliseconds
        </p>
        <pre><code class="language-js">
          fetch('https://dummyjson.com/RESOURCE/?delay=1000');
        </code></pre>
      </div>

      <div class="resource" id="intro-auth">
        <a href="#intro-auth" class="res-title">Authorizing Resources</a>
        <p class="res-desc">All resources can be accessed via an access token to test as a logged-in user.</p>
        <p class="res-tip">Go to auth module and generate an auth access token to get data as an authorized user</p>
        <pre><code class="language-js">
          /* providing access token in bearer */
          fetch('https://dummyjson.com/auth/RESOURCE', {
            method: 'GET', /* or POST/PUT/PATCH/DELETE */
            headers: {
              'Authorization': 'Bearer /* YOUR_ACCESS_TOKEN_HERE */', 
              'Content-Type': 'application/json'
            }, 
          })
          .then(res => res.json())
          .then(console.log);
        </code></pre>
      </div>
    </div>
  </section>

  <script src="https://assets.dummyjson.com/public/js/prism.min.js" async defer></script>

  <!-- footer -->
  <%- include('./partials/docs-footer') %>

    <script>
    selectNavItem(window.location.hash || '#intro-test');
  </script>
</body>

</html>