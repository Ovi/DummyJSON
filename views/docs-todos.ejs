<!DOCTYPE html>
<html lang="en">
  <!-- header -->
  <%- include('./partials/docs-head') %>

  <body>
    <!-- header -->
    <%- include('./partials/header') %>

    <!-- side-nav -->
    <%- include('./partials/docs-side-nav') %>

    <main>
      <div id="hero">
        <!-- ads -->
        <%- include('./partials/ads') %>

        <h1>Docs</h1>
        <p>
          You can use examples below to check how DummyJSON works.
        </p>
      </div>

      <div class="section">
        <h2 id="todos" class="section-intro">
          <i class="bx bx-task"></i>
          <a href="#todos" class="no-link">Todos</a>
        </h2>

        <div class="sub-section">
          <h3 id="all">
            <a href="#all" class="no-link">Get all todos</a>
          </h3>

          <blockquote>
            <pre>
              <code class="language-js">
fetch('https://dummyjson.com/todos')
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  "todos": [
    {
      "id": 1,
      "todo": "Do something nice for someone I care about",
      "completed": true,
      "userId": 26
    },
    {...},
    {...}
    // 30 items
  ],
  "total": 150,
  "skip": 0,
  "limit": 30
}
              </code>
            </pre>
          </blockquote>
        </div>

        <div class="sub-section">
          <h3 id="single">
            <a href="#single" class="no-link">Get a single todo</a>
          </h3>

          <blockquote>
            <pre>
              <code class="language-js">
fetch('https://dummyjson.com/todos/1')
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  "id": 1,
  "todo": "Do something nice for someone I care about",
  "completed": true,
  "userId": 26
}
              </code>
            </pre>
          </blockquote>
        </div>

        <div class="sub-section">
          <h3 id="random">
            <a href="#random" class="no-link">Get a random todo</a>
          </h3>

          <blockquote>
            <pre>
              <code class="language-js">
fetch('https://dummyjson.com/todos/random')
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  // random result, will be changed on every call to /random
  "id": 127,
  "todo": "Prepare a dish from a foreign culture",
  "completed": false,
  "userId": 7
}
              </code>
            </pre>
          </blockquote>
        </div>

        <div class="sub-section">
          <h3 id="limit_skip">
            <a href="#limit_skip" class="no-link">Limit and skip todos</a>
          </h3>
          <p>
            <small>
              <i class="bx bx-right-arrow bx-xs"></i>
              You can pass "limit" and "skip" params to limit and skip the
              results for pagination.
            </small>
          </p>

          <blockquote>
            <pre>
              <code class="language-js">
fetch('https://dummyjson.com/todos?limit=3&skip=10')
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  "todos": [
    {
      "id": 11, // first 10 items were skipped
      "todo": "Text a friend I haven't talked to in a long time",
      "completed": false,
      "userId": 39
    },
    {
      "id": 12,
      "todo": "Organize pantry",
      "completed": true,
      "userId": 39
    },
    {
      "id": 13,
      "todo": "Buy a new house decoration",
      "completed": false,
      "userId": 16
    }
  ],
  "total": 150,
  "skip": "10",
  "limit": 3
}
              </code>
            </pre>
          </blockquote>
        </div>

        <div class="sub-section">
          <h3 id="user">
            <a href="#user" class="no-link">Get all todos by user id</a>
          </h3>

          <blockquote>
            <pre>
              <code class="language-js">
/* getting todos of user with id 5 */
fetch('https://dummyjson.com/todos/user/5')
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  "todos": [
    {
      "id": 19,
      "todo": "Create a compost pile",
      "completed": true,
      "userId": 5 // user id is 5
    },
    {...},
    {...}
  ],
  "total": 3,
  "skip": 0,
  "limit": 3
}
              </code>
            </pre>
          </blockquote>
        </div>

        <div class="sub-section">
          <h3 id="add">
            <a href="#add" class="no-link">
              Add a new todo
            </a>
          </h3>
          <p>
            <small>
              <i class="bx bx-error-alt bx-xs"></i>
              Adding a new todo will not add it into the server.
            </small>

            <br />

            <small>
              <i class="bx bx-error-alt bx-xs"></i>
              It will simulate a POST request and will return the new created
              todo with a new id
            </small>
          </p>

          <blockquote>
            <pre>
              <code class="language-js">
fetch('https://dummyjson.com/todos/add', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    todo: 'Use DummyJSON in the project',
    completed: false,
    userId: 5,
  })
})
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  "id": 151,
  "todo": "Use DummyJSON in the project",
  "completed": false,
  "userId": 5
}
              </code>
            </pre>
          </blockquote>
        </div>

        <div class="sub-section">
          <h3 id="update">
            <a href="#update" class="no-link">
              Update a todo
            </a>
          </h3>
          <p>
            <small>
              <i class="bx bx-error-alt bx-xs"></i>
              Updating a todo will not update it into the server.
            </small>

            <br />

            <small>
              <i class="bx bx-error-alt bx-xs"></i>
              It will simulate a PUT/PATCH request and will return the todo with
              modified data
            </small>
          </p>

          <blockquote>
            <pre>
              <code class="language-js">
/* updating completed status of todo with id 1 */
fetch('https://dummyjson.com/todos/1', {
  method: 'PUT', /* or PATCH */
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    completed: false,
  })
})
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  "id": "1",
  "todo": "Do something nice for someone I care about",
  "completed": false, // complete status was changed
  "userId": 26
}
              </code>
            </pre>
          </blockquote>
        </div>

        <div class="sub-section">
          <h3 id="delete">
            <a href="#delete" class="no-link">Delete a todo</a>
          </h3>
          <p>
            <small>
              <i class="bx bx-error-alt bx-xs"></i>
              Deleting a todo will not delete it into the server.
            </small>

            <br />

            <small>
              <i class="bx bx-error-alt bx-xs"></i>
              It will simulate a DELETE request and will return deleted todo
              with "isDeleted" & "deletedOn" keys
            </small>
          </p>

          <blockquote>
            <pre>
              <code class="language-js">
fetch('https://dummyjson.com/todos/1', {
  method: 'DELETE',
})
.then(res => res.json())
.then(console.log);
            </code>
           </pre>
          </blockquote>

          <a class="button" onclick="toggleOutput(event)">
            Show output
          </a>

          <blockquote>
            <pre class="result hidden">
              <code class="language-json">
{
  "id": 1,
  "todo": "Do something nice for someone I care about",
  "completed": true,
  "userId": 26,
  "isDeleted": true,
  "deletedOn": /* ISOTime */
}
              </code>
            </pre>
          </blockquote>
        </div>
      </div>

      <div id="next-prev-resource">
        <a href="/docs/comments/" class="button ghost">
          <i class="bx bx-left-arrow"></i>
          Comments
        </a>
        <a href="/docs/quotes/" class="button">
          Quotes
          <i class="bx bx-right-arrow"></i>
        </a>
      </div>

      <!-- side-nav -->
      <%- include('./partials/footer') %>
    </main>
  </body>
</html>
